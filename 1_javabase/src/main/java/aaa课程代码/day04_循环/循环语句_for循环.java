package aaa课程代码.day04_循环;

/**
 * 流程控制语句结构：
 * 1、顺序结构
 * 2、分支结构
 * （1）条件判断：if..else
 * （2）选择结构：switch..case
 * 3、循环结构：凡是需要重复执行某些代码时
 * （1）for
 * （2）while
 * （3）do..while
 * （4）增强for:foreach
 * <p>
 * 一、for循环
 * 1、语法结构：
 * for(;;){
 * 循环体：需要重复执行的代码块;
 * }
 * 说明：for(;;)的两个分号不可以省略，也不能多了
 * <p>
 * for(初始化表达式①; 循环条件②; 迭代表达式③){
 * 循环体④：需要重复执行的代码块;
 * }
 * <p>
 * 2、执行过程：
 * (1)初始化表达式①
 * (2)判断循环条件②
 * (3)如果成立：执行循环体④，执行完循环体，去执行迭代表达式③，然后回到(2)
 * 如果不成立：结束for循环
 * <p>
 * 3、执行的特点：
 * （1）for循环有可能一次都不执行
 * （2）适用于次数必须有规律和明显的情景
 * （3）①②③④ 四个地方都可以为空，不填表达式【但这样容易死循环】
 */
public class 循环语句_for循环 {
    public static void main(String[] args) {
        // 语法案例：大家说100次的“柴老师，真漂亮！”
/*		for(;;){
			System.out.println("柴老师，真漂亮！");
		}*/
        for (int i = 1; i <= 5; i++) {
            System.out.println("i=" + i);
            System.out.println("柴老师，真漂亮！");
        }
//        System.out.println("i=" + i);//超过作用域
		/*
		(1)int i=1;
		(2)判断循环条件是否成立  i<=5  成立
		(3)执行循环体一次  System.out.println("柴老师，真漂亮！");
		(4)执行迭代表达式，修改i的值  i++  i=2
		(5)判断循环条件是否成立  i<=5  成立
		(6)执行循环体一次  System.out.println("柴老师，真漂亮！");
		(7)执行迭代表达式，修改i的值  i++  i=3
		(8)判断循环条件是否成立  i<=5  成立
		(9)执行循环体一次  System.out.println("柴老师，真漂亮！");
		(10)执行迭代表达式，修改i的值  i++  i=4
		(11)判断循环条件是否成立  i<=5  成立
		(12)执行循环体一次  System.out.println("柴老师，真漂亮！");
		(13)执行迭代表达式，修改i的值  i++  i=5
		(14)判断循环条件是否成立  i<=5  成立
		(15)执行循环体一次  System.out.println("柴老师，真漂亮！");
		(16)执行迭代表达式，修改i的值  i++  i=6
		(17)判断循环条件是否成立  i<=5  不成立
		*/
    }
}
